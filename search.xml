<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo+GitHub搭建个人博客]]></title>
    <url>%2F2019%2F01%2F20%2FHexo%2BGitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[Hexo+GitHub搭建个人博客author：刘真真 写在前面：去年三月份时候阿里云做活动就申请了一个域名，但是一直觉得搭建网站是一个比较麻烦的时候，就搁置了很久，在男朋友的鼓励下，遂决定好好捯饬一下自己的网站拿来写博客，开始一直担心自己做不出比较好的效果，后面渐渐将这种想法搁置，网上有非常多hexo的爱好者将自己的过程分享出来，基本上踩得坑都是前人遇到的，前人栽树后人乘凉，我也将搭建博客中一些关键性的步骤总结一下，以防后人跳坑。本人没有接触过前端知识，全凭谷歌和百度，所以有搭建个人网站想法的同学尽管去做，开始了第一步，后面的就不是问题了。 一、前期准备1.1、安装Node.js在Node.js官网下载对应平台的安装程序。在Windows上安装时需选择全部组建，勾选Add to Path,打开命令行安装成功可以看到 1.2、安装git在Git官网上下载Windows的安装程序。安装完成后，在开始菜单里找到”Git bsah Here”,弹出一个类似命令行的窗口，说明Git安装成功！ 同时配置电脑的环境变量，或者在安装的时候选择use Git from the Windows Command Prompt,即可在命令行中调用git。 1.3、Github账户注册和新建项目项目必须要遵守格式：账户名.github.io，以免后面产生不必要的麻烦。 1.4、安装hexo在电脑的任何位置建一个文件夹，我在E盘建了一个与工程同名的zhengirl.github.io文件夹，然后通过命令行进入该文件夹： 输入npm install hexo -g,开始安装hexo，输入hexo -v,检查hexo是否安装成功。 输入hexo init,初始化文件夹。经过漫长的等待，可以看到Start blogging with Hexo！。 输入npm install，安装所需要的组件。 二、本地网页的搭建2.1、体验hexo在安装好前面需要的一系列包后，输入hexo g，首次体验Hexo。 输入hexo s，开启服务器，访问该网址，正式体验Hexo。 2.2、将Hexo与github page联系起来首先需要设置Git的user name和email（如果是第一次使用的话）。打开命令行 12$ git config --golbal user.name. &quot;author&quot; #将用户名设为author$ git config --global user.email &quot;author@corpmail.com&quot; #将用户邮箱设为author@corpmail.com 添加SSH，详情见这篇博客,输入ssh -T gi@github.com,测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了。 2.3、配置Deployment用VScode打开zhengirl.git.com.io,即整个工程，找到站点配置文件_config.yml，查找repo并修改，在文件末尾： 1234deploy: type: git repository: git@github.com:zhengirl/zhengirl.github.io.git branch: master 2.4、新建博客在命令行执行命令：hexo new post “博客名” 此时在/source/_posts下可以看到已经创建的文件 但这里则多生成了一个博客名的文件夹，至于为什么会生成这个文件夹以及它的用途，我们在下篇文章详解。 2.5、部署文章在生成以及部署文章之前需要安装一个扩展，npm install hexo-develoyer-git --save，编辑好文章后输入hexo d -g，生成和部署网站。 部署成功后访问网址：http://用户名.github.io,将看到部署成功的整个网站。 至此为止，最基本的hexo+github搭建个人博客基本完成，但是我们的博客还是太简陋了一些，接下来需要对博客进行一些雕琢。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>入门博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo之NexT博客美化]]></title>
    <url>%2F2019%2F01%2F20%2FHexo%E4%B9%8BNexT%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96%2F</url>
    <content type="text"><![CDATA[Hexo之NexT博客美化 写在前面：默认的hexo界面看起来还是太简陋了，可以给Hexo换一个主题，这里推荐NexT，这是一个比较成熟的主题，使用的人也是最多的，优化，配置扩展都集成了，使用起来比较简单。然后再对功能界面做一些扩展，博客重质量，界面做的干净、清爽就行。本文详细介绍了博客美化的步骤。 一、安装NexT主题在命令行输入 1git clone https://github.com/theme-next/hexo-theme-next themes/next 下载主题。打开根目录下的_config.yml为博客的站点配置文件，主题配置文件在./themes/_config.yml。本文的整个配置基本是在修改这两个配置文件，所以你需要区分清楚。在站点配置文件./config.yml查找theme并修改： 12## Themes: https://hexo.io/themes/theme: next 这样就启用了主题next，可以输入hexo s查看效果。注意，有时候通过hexo s预览时，你会发现自己所做的修改并没有生效，这时不要着急，命令行输入hexo clean清理下database文件夹和public文件夹即可。 二、博客设置需要先对博客基本信息做一些设置，注意，设置时冒号后面都要有一个空格，这是yml语法格式。否则会报错或修改不生效。 2.1、设置语言在站点配置文件./_config.yml中，将language设置成所需要的语言。例如简体中文，配置如下： 1language: zh-CN 2.2、基本信息配置在站点配置文件./_config.yml的开头，填上自己博客的相应信息： 12345title: #标题subtitle: #子主页标题 description: #描述keywords: #关键字author: #作者zhen 2.3、设置主题的SchemeNext自带了几种外观，在主题配置文件./themes/next/_config.yml里找到schemes，可以自行选择布局，根据个人喜好，把前面的注释符#去掉即可： 12345# Schemes# scheme: Musescheme: Mist#scheme: Pisces#scheme: Gemini 2.4、菜单栏设置在网站首页有归档等菜单，在主题配置文件./themes/next/_config.yml里找到menu，把需要的菜单取消注释。另外也可以自己添加菜单栏，||后面是font awesome图标栏，如下： 123456789menu: home: / || home archives: /archives/ || archive categories: /categories/ || th tags: /tags/ || tags about: /about/ || user #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat 2.5、创建页面设置完菜单但是没有相关页面的话点击进去就会显示错误。在命令行输入 123hexo new page tagshexo new page categorieshexo new page about 然后在./source/_posts文件夹下面会生成对应的文件夹，打开将页面的type设置为相应的内容。例： 123456---title: 这里是所有分类的汇总categories: 分类名 type: "categories"date: 2019-01-17 15:29:31--- 2.6、文章显示设置默认首页的文章会显示全文，在发表文章的内容中加上&lt;!--more--&gt; 这样首页中文章会显示到你插入这句话的前面，点击阅读全文才会显示整篇文章。 2.7、使用RSS在命令行中输入: 1npm install --save hexo-generator-feed 安装插件，然后在主题配置文件./themes/next/_config.yml中找到rss并修改： 1rss: /atom.xml 2.8、设置博客favicon图标在./themes/next/source/images目录下放置图标，和默认的图标类似，然后在主题配置文件./themes/next/_config.yml找到favicon并修改： 1234567favicon: small: /images/favicon-16x16-next.ico medium: /images/favicon-32x32-next.ico apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg #android_manifest: /images/manifest.json #ms_browserconfig: /images/browserconfig.xml 2.9、侧边栏社交链接在主题配置文件./themes/next/_config.yml找到social把需要的内容取消注释，填好你的链接就可以。||后面的是图标名称，和菜单一样，也是使用的Font Awesome`图标。 123456789101112social: GitHub: https://github.com/zhengirl || github #E-Mail: mailto:yourname@gmail.com || envelope #Weibo: https://weibo.com/yourname || weibo #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skype 2.10、设置背景动画在主题配置文件中，找到canvas_nest，改为true： 1234567canvas_nest: enable: true onmobile: true # display on mobile or not color: '0,0,255' # RGB values, use ',' to separate opacity: 0.5 # the opacity of line: 0~1 zIndex: -1 # z-index property of the background count: 99 # the number of lines 2.11、修改文章底部的#号标签打开./themes/next/layout/_macro/post.swig文件中，搜索rel=&quot;tag&quot;&gt;#,将#替换为Font Awesome图标： 1rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt; 2.12、搜索服务在命令行输入： 1npm install hexo-generator-searchdb --save 安装hexo-generator-searchdb插件，然后在站点配置文件./_config.yml添加以下代码： 123456# searchsearch: path: search.xml field: post format: html limit: 10000 然后在主题配置文件./themes/next/_config.yml中找到local_search改为true即可： 12local_search: enable: true 2.13、代码高亮在站点配置文件./_config.yml内找到highlight，并设置如下： 123456highlight: enable: true line_number: true #代码自动高亮 auto_detect: true tab_replace: 然后在主题配置文件./themes/next/_config.yml中找到highlight_theme，设置成你喜欢的代码高亮主题： 1234# Code Highlight theme# Available values: normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: night 2.14、头像圆形和旋转将头像显示成圆形，鼠标放上去有旋转效果，在.\themes\next\source\css\_common\components\sidebar\sidebar-author.styl文件将里面的内容替换为： 12345678910111213141516171819202122232425262728293031323334.site-author-image &#123; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; border-radius: 50%; -webkit-border-radius: 50%; -moz-border-radius: 50%; transition: 1.4s all;&#125;.site-author-image:hover &#123; background-color: #e6be93; -webkit-transform: rotate(360deg); -moz-transform: rotate(360deg); -ms-transform: rotate(360deg); -transform: rotate(360deg);&#125;.site-author-name &#123; margin: $site-author-name-margin; text-align: $site-author-name-align; color: $site-author-name-color; font-weight: $site-author-name-weight;&#125;.site-description &#123; margin-top: $site-description-margin-top; text-align: $site-description-align; font-size: $site-description-font-size; color: $site-description-color;&#125; 2.15、添加文章字数和阅读时长统计功能首先需要在命令行输入： 1npm install hexo-symbols-count-time --save 安装统计插件，然后在站点配置文件./_config.yml末尾添加如下使能统计功能的代码： 123456# reading timesymbols_count_time: symbols: true time: true total_symbols: true total_time: true 2.16、保留文章本身的编号我们在写博客的时候，会自己给文章编号，但next主题默认的也有编号，这样多个编号就比较奇怪，所以把默认的编号取消，在主题配置文件查找toc，修改如下： 1234toc: enable: true # Automatically add list number to toc. number: false 2.17、自定义博客Next中留出给使用者自我设计的空间，在/themes/next/source/css/_custom/cutom.styl文件中可以自行添加一些小样式让博客有所不同： 123456789//文章阴影与边缘强化.post &#123; margin-top: 0px; margin-bottom: 0px; border-radius: 16px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.70); -moz-box-shadow: 0 0 5px rgba(0, 0, 0, 0.70);&#125; 三、在文章中显示图片首先在站点配置文件中将post_asset_folder后面修改为true，在建立一篇新的博客时，Hexo会自动建立一个与文章同名的文件夹，这样一来，就可以把图片存储在这个文件夹中方便调用。 其次本人习惯于在typora中将markdown文件编辑好之后直接复制到hexo中，所以需要对typora的设置做一些更改，打开偏好设置，选择将图片复制到指定文件夹中，这样在typora中也有指定的与文章同名的文件夹，所以将文章和文件夹都复制到Hexo中即可。 在命令行输入 1npm install https://github.com/CodeFalling/hexo-asset-image --save 安装插件，等待一段时间。输入hexo s在本地预览网站图片就可以显示啦！ 四、致谢在搭建博客的过程中，遇到了一些问题，参考了很多大佬的解决方案，感谢他们的分享。本文只是将自己搭建博客的过程复述了一遍，希望对后来者有所帮助。 推荐在配置的时看官方文档：http://theme-next.iissnan.com/third-party-services.html]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>美化设置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派入门]]></title>
    <url>%2F2019%2F01%2F18%2F%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[树莓派入门（控制LED灯）author： 刘真真 写在前面：树莓派是基于Linux的迷你主机，但功能完善，且预留了很多IO口给开发者扩展，比单片机的功能强大不少，可以将Python程序移植到树莓派上。本文简单介绍了新手如何使用树莓派和利用树莓派点亮一个LED灯。 一、板载资源+配件树莓派是迷你主机，集成在一块电路板上。其型号为Rsspberry Pi 三代B型。 电源 ：Micro USB 接口的手机充电器，输出5V2A Micro SD卡 ：充当硬盘功能，大小最好在8G以上。 显示器：HDMI接口的显示器，需要屏幕则接 键盘：树莓派内置蓝牙，USB或蓝牙的无线键盘都可以用。需要时则配。 二、电子元件1、面包板 2、一段公头一端母头的杜邦线 3、LED二极管 4、1K的电阻 三、安装系统1、下载树莓派系统 网址: https://www.raspberrypi.org/downloads/ 选择需要的系统即可。这里我们选择树莓派官方的系统，预装了桌面和部分软件，如下图箭头所指。如果有一定的开源系统使用经验，可以选择最为轻量的只有操作系统的裸机。 2、将SD卡格式化 ​ 直接在文件资源管理器中将SD卡格式化即可 3、下载将系统导入内存卡的工具etcher 安装成功后打开，首先选择下载好的系统镜像文件，然后选择树莓派内存卡，点击Flash。 注意：在此过程中如果提示不可识别文件系统或者要格式化，直接点X关闭即可。 flash完成后，将内存卡取下插入树莓派，开机即可查看新系统！ 四、SSH登录安装系统之后，选择树莓派联网方式，树莓派有网线接口和WiFi芯片，用WiFi上网更加方便。在打开新系统时，搜索局域网输入密码即可。用SSH将电脑和树莓派系统连通，首先打开树莓派的SSH功能，在命令行输入： 1sudo raspi-config 得到如下的设置 进入第五项Interfacing Options，然后选择SSH： 使能SSH即可。电脑和树莓派连接同一个路由器，在浏览器访问路由器的IP（192.168.1.1），查看树莓派的IP地址为192.168.1.101。在客户端输入树莓派的用户名 pi 和密码 123456： 1ssh pi@192.168.1.101 与树莓派建立连接。 五、远程桌面为了更加方便地操作树莓派，安装远程桌面。打开树莓派终端，输入 1sudo apt-get install xrdp 等待安装完成。 打开电脑的远程桌面 输入树莓派的IP地址，远程桌面操作，用户名pi， 密码123456，连接成功： 六、点 亮 LED树莓派提供了一组通用IO口，称为GPIO。40个引脚的定义与板上引脚资源对应如下 将树莓派和电子元器件连起来。注意二级管的正负极。正极接3.3V，负极通过电阻接地，可以看到二极管亮了。下面使用Node脚本控制LED。 首先，将接地的导线从GND针脚拔出，接到GPIO0.0即11号引脚。注意，3.3V的针脚是是有标识的为方的，其他针脚都是圆的。代码如下： 1234567891011var rpio = require('rpio')rpio.open(11, rpio.OUTPUT)function blink()&#123; rpio.write(11, rpio.HIGH); setTimeout(function ledoff()&#123; rpio.write(11, rpio.LOW); &#125;,50);&#125;setInterval(blink, 100); 用node.js稍作尝试，接下来轮到主角python出场了，Linux系统中很多功能是通过python实现的，且内嵌了python，无需安装，与python的兼容性极好，所以尝试用Python使LED闪烁。 代码如下 1234567891011121314151617#!/usr/bin/python#author:lzzimport RPi.GPIO as GPIOimport timeGPIO.setwarnings(False)GPIO.setmode(GPIO.BOARD)#BCM和BOARD两种命名模式GPIO.setup(11, GPIO.OUT)while True: GPIO.output(11, GPIO.HIGH) time.sleep(0.05) GPIO.output(11, GPIO.LOW) time.sleep(0.05)GPIO.cleanup() 程序逻辑： 1、导入GPIO的包 2、导入与时间包 3、设置GPIO针的命名方式，可用的有GPIO.BCM和GPIO.BOARD，分别代表boardcom命名系统和树莓派板子上的命名系统。 4、将引脚11设置为输出 5、控制引脚11的电平高低变换 6、清除掉之前RPi.GPIO.setup()设置的状态。退出程序前一定要调用，否则下次调用会出错。]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>入门</tag>
        <tag>LED</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello,Hexo!]]></title>
    <url>%2F2019%2F01%2F17%2FHello-Hexo%2F</url>
    <content type="text"><![CDATA[使用hexo，是一件非常简单的事情。测试文本。]]></content>
  </entry>
</search>
